@import "helpers.cocoascript";

var onRun = function (context) {
    var doc = context.document;
    
    if (!documentExportable(context)) {
        return;
    }
    
    var foreignSymbolsUpToDate = true;
    // `MSBadgeController` is defined on Sketch 44, `activeWindowBadgingActions` is defined on Sketch 46.
    try {
        var activeActions = [[doc badgeController] activeWindowBadgingActions];
        var activeActionsLoop = [activeActions objectEnumerator];
        var action = nil;
        while (action = [activeActionsLoop nextObject]) {
            if ([action isKindOfClass:NSClassFromString(@"MSSyncLibraryAction")]) {
                foreignSymbolsUpToDate = false;
                
                break;
            }
        }
        
        action = nil;
        activeActionsLoop = nil;
        activeActions = nil;
    } catch (error) {
        log("Foreign symbols up to date failed with error “" + error + "”.");
    }
    
    if (!foreignSymbolsUpToDate) {
        var alert = [NSAlert alertWithMessageText:@"Symbols not up to date" defaultButton:@"Continue and Export" alternateButton:@"Cancel" otherButton:nil informativeTextWithFormat:@"To capture the latest changes in your libraries, make sure that your symbols are up to date before exporting artboards to Zeplin.\n\n☝️ Select “Library Update Available” on the top right to review changes."];
        
        if ([alert runModal] == NSAlertAlternateReturn) {
            return;
        }
        
        alert = nil;
    }
    
    var artboards = [context valueForKeyPath:@"selection.@distinctUnionOfObjects.parentArtboard"];
    if (![artboards count]) {
        [NSApp displayDialog:@"Please select the artboards you want to export to Zeplin.\n\n☝️ Selecting a layer inside the artboard should be enough." withTitle:@"No artboard selected"];
        return;
    }

    exportArtboards(context, artboards);
}

var exportColors = function (context) {
    if (!documentExportable(context)) {
        return;
    }

    var path = temporaryPath();
    var directives = defaultDirectives(context, path);
    [directives setObject:@"colors" forKey:@"type"];

    writeDirectives(directives, path);

    directives = nil;

    launchZeplin(context, path);

    path = nil;
}

var exportTextStyles = function (context) {
    if (!documentExportable(context)) {
        return;
    }

    var path = temporaryPath();
    var directives = defaultDirectives(context, path);
    [directives setObject:@"textStyles" forKey:@"type"];

    writeDirectives(directives, path);

    directives = nil;

    launchZeplin(context, path);

    path = nil;
}

var exportArtboardsFromCurrentPage = function (context) {
    if (!documentExportable(context)) {
        return;
    }

    var artboards = layersOfPagesWithClassName(NSArray.arrayWithObject(context.document.currentPage()), "MSArtboardGroup");

    exportArtboards(context, artboards);
}

var exportArtboardsFromAllPages = function (context) {
    if (!documentExportable(context)) {
        return;
    }

    var artboards = layersOfPagesWithClassName(context.document.pages(), "MSArtboardGroup");

    exportArtboards(context, artboards);
}

var exportSymbolsFromCurrentPage = function (context) {
    if (!documentExportable(context)) {
        return;
    }

    var artboards = layersOfPagesWithClassName(NSArray.arrayWithObject(context.document.currentPage()), "MSSymbolMaster");

    exportArtboards(context, artboards);
}

var exportSymbolsFromAllPages = function (context) {
    if (!documentExportable(context)) {
        return;
    }

    var artboards = layersOfPagesWithClassName(context.document.pages(), "MSSymbolMaster");

    exportArtboards(context, artboards);
}
